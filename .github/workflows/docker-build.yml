name: GHAction example

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  ci_step:
    name: Build, Test for Vulnerabilities, Tag and Push Docker Image to DockerHub
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: comanderdc/temp
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: comanderdc
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build --cache-from ${{ steps.meta.outputs.cache_from }} -t ${{ steps.meta.outputs.tags }} .

      - name: Scan for vulnerabilities (replace with your preferred scanner)
        uses: anchore/grype@1.4.1  # Or other vulnerability scanner like trivy
        with:
          image: ${{ steps.meta.outputs.tags }}
          fail_on: high  # Fail if high or critical vulnerabilities are found

      - name: Push Docker image (conditionally based on scan results)
        run: |
          if [[ $(grype -f json ${{ steps.meta.outputs.tags }} | jq -r '.[].severity' | grep -q 'high\|critical') ]]; then
            echo "Image contains high or critical vulnerabilities. Build failed."
            exit 1
          fi

          docker push ${{ steps.meta.outputs.tags }}

      - name: Save Docker build cache
        uses: docker/build-push-action@v5  # Use for cache management if needed
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false  # Don't push in this step, only save cache
          cache-from: |
            type=registry,ref=coamnderdc/temp:cache
          cache-to: type=registry,ref=comanderdc/temp:cache
