name: GHAction example

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  ci_step:
    name: Build, Test CVE, and Push Docker image (if no critical/high CVEs)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "comanderdc/temp"
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: comanderdc
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        id: build  # Dodaj ID kroku, aby móc odnosić się do wyjść
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: |
            type=registry,ref=comanderdc/temp
          cache-to: |
            type=registry,ref=comanderdc/temp
          push: false
          
      - name: Scan for CVEs
        id: trivy_scan  # Dodaj ID kroku, aby móc odnosić się do wyjść
        uses: aquasecurity/trivy-action@v0.12.0  # Użyj poprawnej wersji
        with:
          image-ref: ${{ steps.build.outputs.image_ref }}
          format: json
          severity: HIGH,CRITICAL  # Skanuj dla wysokich i krytycznych CVE
          ignore-unfixed: true
        continue-on-error: true  # Kontynuuj, nawet jeśli skanowanie nie powiedzie się

      - name: Push Docker image (if no critical/high CVEs)
        if: ${{ steps.trivy_scan.outputs.vulnerability_count == 0 }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
